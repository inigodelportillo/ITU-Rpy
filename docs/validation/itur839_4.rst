Validation results ITU-R P.839-4
================================

This page contains the validation examples for Recommendation ITU-R P.839-4: Rain height model for prediction methods.

All test cases were extracted from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.

.. contents:: Functions tested
    :depth: 2


Function rain_height
--------------------

The table below contains the results of testing function ``rain_height``.
The test cases were extracted from spreadsheet ``ITURP839-4_rain_height.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 3.133  #  (째N)
    lon = 101.7  # (째E)

    # Make call to test-function rain_height
    itur_val = itur.models.itu839.rain_height(lat=lat, lon=lon)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 4.9579744  # (km)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rain_height_table.html


Function isoterm_0
------------------

The table below contains the results of testing function ``isoterm_0``.
The test cases were extracted from spreadsheet ``ITURP839-4_rain_height.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 3.133  #  (째N)
    lon = 101.7  # (째E)

    # Make call to test-function isoterm_0
    itur_val = itur.models.itu839.isoterm_0(lat=lat, lon=lon)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 4.5979744  # (km)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_isoterm_0_deg_table.html

