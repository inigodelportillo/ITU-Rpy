Validation results for ITU-R P.618-13
=====================================

This page contains the validation examples for Recommendation ITU-R P.618-13: Propagation data and prediction methods required for the design of Earth-space telecommunication systems.

All test cases were extracted from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.

.. contents:: Functions tested
    :depth: 2


Function rain_attenuation_probability
-------------------------------------

The table below contains the results of testing function ``rain_attenuation_probability``.
The test cases were extracted from spreadsheet ``ITURP618-13_A_rain.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 51.5  #  (°N)
    lon = -0.14  # (°E)
    hs = 0.031382983999999996  #  (km)
    el = 31.07699124  # (°)
    Ls = 4.690817392  # (km)
    P0 = 0.053615095999999994  # (0-1)

    # Make call to test-function rain_attenuation_probability
    itur_val = itur.models.itu618.rain_attenuation_probability(lat=lat, lon=lon, hs=hs, el=el, Ls=Ls, P0=P0)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 7.341941568999999  # (%)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rain_probability_table.html


Function rain_attenuation
-------------------------

The table below contains the results of testing function ``rain_attenuation``.
The test cases were extracted from spreadsheet ``ITURP618-13_A_rain.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 51.5  #  (°N)
    lon = -0.14  # (°E)
    hs = 0.031382983999999996  #  (km)
    el = 31.07699124  # (°)
    f = 14.25  # (GHz)
    tau = 0.0  # (°)
    p = 1.0  # (%)
    R001 = 26.480520000000002  # (mm/h)

    # Make call to test-function rain_attenuation
    itur_val = itur.models.itu618.rain_attenuation(lat=lat, lon=lon, hs=hs, el=el, f=f, tau=tau, p=p, R001=R001)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 0.495317069  # (dB)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rain_attenuation_table.html


Function scintillation_attenuation
----------------------------------

The table below contains the results of testing function ``scintillation_attenuation``.
The test cases were extracted from spreadsheet ``ITURP618-13_A_rain.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 51.5  #  (°N)
    lon = -0.14  # (°E)
    f = 14.25  # (GHz)
    el = 31.07699124  # (°)
    p = 1.0  # (%)
    D = 1.0  # (m)
    eta = 0.65  # (0-1)

    # Make call to test-function scintillation_attenuation
    itur_val = itur.models.itu618.scintillation_attenuation(lat=lat, lon=lon, f=f, el=el, p=p, D=D, eta=eta)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 0.261931889  # (dB)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_scintillation_attenuation_table.html


Function rain_cross_polarization_discrimination
-----------------------------------------------

The table below contains the results of testing function ``rain_cross_polarization_discrimination``.
The test cases were extracted from spreadsheet ``ITURP618-13_A_xpd.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    f = 14.25  # (GHz)
    el = 31.07699124  # (°)
    p = 1.0  # (%)
    tau = 0.0  # (°)
    Ap = 0.49531707  # (dB)

    # Make call to test-function rain_cross_polarization_discrimination
    itur_val = itur.models.itu618.rain_cross_polarization_discrimination(f=f, el=el, p=p, tau=tau, Ap=Ap)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 49.47769944  # (dB)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_cross_polarization_discrimination_table.html


Function atmospheric_attenuation_slant_path
-------------------------------------------

The table below contains the results of testing function ``atmospheric_attenuation_slant_path``.
The test cases were extracted from spreadsheet ``ITURP618-13_A_total.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 51.5  #  (°N)
    lon = -0.14  # (°E)
    f = 14.25  # (GHz)
    el = 31.07699124  # (°)
    p = 1.0  # (%)
    D = 1.0  # (m)
    eta = 0.65  # h
    tau = 0.0  # (°)
    hs = 0.031382983999999996  # (km)

    # Make call to test-function atmospheric_attenuation_slant_path
    itur_val = itur.atmospheric_attenuation_slant_path(lat=lat, lon=lon, f=f, el=el, p=p, D=D, eta=eta, tau=tau, hs=hs)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 1.212790721  # (dB)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_total_attenuation_table.html

