Validation results for ITU-R P.837-7
====================================

This page contains the validation examples for Recommendation ITU-R P.837-7: Characteristics of precipitation for propagation modelling.

All test cases were extracted from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.

.. contents:: Functions tested
    :depth: 2


Function rainfall_probability
-----------------------------

The table below contains the results of testing function ``rainfall_probability``.
The test cases were extracted from spreadsheet ``ITURP837-7_rainfall_rate_probability.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 3.133  #  (°N)
    lon = 101.7  # (°E)

    # Make call to test-function rainfall_probability
    itur_val = itur.models.itu837.rainfall_probability(lat=lat, lon=lon)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 4.53654368  # (%)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rainfall_rate_probability_table.html


Function rainfall_rate
----------------------

The table below contains the results of testing function ``rainfall_rate``.
The test cases were extracted from spreadsheet ``ITURP837-7_rainfall_rate.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 3.133  #  (°N)
    lon = 101.7  # (°E)
    p = 0.01  # (%)

    # Make call to test-function rainfall_rate
    itur_val = itur.models.itu837.rainfall_rate(lat=lat, lon=lon, p=p)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 99.15117186  # (mm/hr)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rainfall_rate_table.html


Function rainfall_rate
----------------------

The table below contains the results of testing function ``rainfall_rate``.
The test cases were extracted from spreadsheet ``ITURP837-7_rainfall_rate_R001.csv`` from the
`ITU Validation examples file (rev 5.1) <https://www.itu.int/en/ITU-R/study-groups/rsg3/ionotropospheric/CG-3M3J-13-ValEx-Rev5_1.xlsx>`_.
In addition to the input-arguments, expected result (``ITU Validation``), and
ITU-Rpy computed result (``ITUR-py Result``), the absolute and relative errors
are shown. Each test case is color-coded depending on the magnitude of the
errors (green = pass, errors are negligible, red = fail, relative error is
above 0.01%).

In addition, the code snippet below shows an example of how to generate the
first row of the results in the table:

.. code-block:: python

    import itur

    # Define input attributes
    lat = 3.133  #  (°N)
    lon = 101.7  # (°E)
    p = 0.01  # (%)

    # Make call to test-function rainfall_rate
    itur_val = itur.models.itu837.rainfall_rate(lat=lat, lon=lon, p=p)

    # Compute error with respect to value in ITU example file
    ITU_example_val = 99.14811359999999  # (mm/hr)
    error = ITU_example_val - itur_val.value
    error_rel = error / ITU_example_val * 100  # (%)


.. raw:: html
    :file: test_rainfall_rate_R001_table.html

